package Forms;

import Data.ModelTable;
import Data.StartData;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Mateus
 */
public class LoginForm extends javax.swing.JDialog {

    String loginSql;
    String PwSQL;
    static final String url = "jdbc:mysql://localhost/lp";
    ModelTable login;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlAcademicLibraryControlSystem = new javax.swing.JLabel();
        jlLogin = new javax.swing.JLabel();
        jlPassword = new javax.swing.JLabel();
        jtfLogin = new javax.swing.JTextField();
        jpfPassword = new javax.swing.JPasswordField();
        jbValidate = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        jlInfo = new javax.swing.JLabel();
        jbHelp = new javax.swing.JButton();
        jlDefaultUser = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfLoginSQL = new javax.swing.JTextField();
        jtfPasswordSQL = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Login");

        jlAcademicLibraryControlSystem.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jlAcademicLibraryControlSystem.setText("Modulo de Vendas - LP3");

        jlLogin.setText("Login:");

        jlPassword.setText("Password:");

        jpfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpfPasswordKeyPressed(evt);
            }
        });

        jbValidate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/accept.png"))); // NOI18N
        jbValidate.setText("Validate");
        jbValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbValidateActionPerformed(evt);
            }
        });

        jbCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cross.png"))); // NOI18N
        jbCancel.setText("Cancel");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });

        jbHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Help.png"))); // NOI18N
        jbHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbHelpActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("MySQL Server"));

        jLabel1.setText("Login:");

        jLabel2.setText("Password:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPasswordSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfLoginSQL)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfLoginSQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfPasswordSQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jbHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlDefaultUser, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jlLogin)
                                                    .addComponent(jlPassword))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jtfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jbValidate)
                                                .addGap(47, 47, 47)
                                                .addComponent(jbCancel))))
                                    .addComponent(jlAcademicLibraryControlSystem))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlAcademicLibraryControlSystem)
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlLogin)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jlPassword))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jpfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jbValidate)
                                    .addComponent(jbCancel))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbHelp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlDefaultUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlInfo))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jpfPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpfPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbValidateActionPerformed(null);
        }
    }//GEN-LAST:event_jpfPasswordKeyPressed

    /**
     * Quando ocorrer a ação sobre este botão então será feito a conexão com o
     * banco de dados para veririfcar o login e senha, será passado a senha e
     * login do mysql para a classe StartData para dar continuidade a exibição
     * da aplicação
     *
     * @param evt
     */
    private void jbValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbValidateActionPerformed
        String pw = "";
        String password = " ";
        loginSql = jtfLoginSQL.getText();
        PwSQL = jtfPasswordSQL.getText();
        if (loginSql.length() != 0 && PwSQL.length() != 0) {
            try {
                newConn();
                pw = login.getPassword(jtfLogin.getText());
                password = new String(jpfPassword.getPassword());
                if (password.equals(pw)) {
                    this.dispose();
                    StartData start = new StartData(loginSql, PwSQL);
                } else {
                    JOptionPane.showMessageDialog(null, "Password incorreta", "Message", 2);
                }
            } catch (SQLException ex) {
                if(ex.getErrorCode() == 1045){
                    JOptionPane.showMessageDialog(null, "Acesso negado pelo SGBD, verifique os campos e tente novamente!", "Mensagem", 1);
                }
                if (ex.getErrorCode() == 0) {
                    JOptionPane.showMessageDialog(null, "Login não localizado, verifique o login!", "Mensagem", 1);
                }
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, insira os dados do servidor", "Mensagem", 2);
        }
    }//GEN-LAST:event_jbValidateActionPerformed

    /**
     * Se pressionado o botao de cancelar, o usuário será questionado se quer
     * sair caso sim, então o programa será encerrado
     *
     * @param evt
     */
    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Voce quer realmente sair?", "Pergunta", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jbCancelActionPerformed

    /**
     * Verifica se os campos do mysql não estão vazio, caso não estejam, tenta
     * fazer uma conexão com banco de dados, se tiver apenas um login então a
     * ação do botão mostrará este login e senha. Se tiver mais de um login,
     * então será mostrada a mensagem para contatar o administrador do sistema
     *
     * @param evt
     */
    private void jbHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbHelpActionPerformed
        loginSql = jtfLoginSQL.getText();
        PwSQL = jtfPasswordSQL.getText();
        if (loginSql.length() != 0 && PwSQL.length() != 0) {
            try {
                newConn();
                if (login.getRowsOfUsers() == 1) {
                    jlDefaultUser.setText("Default [User: root Password: root]");
                } else {
                    jlDefaultUser.setText("Contate o administrador para maiores informações");
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, insira os dados do servidor", "Mensagem", 2);
        }
    }//GEN-LAST:event_jbHelpActionPerformed

    /**
     *Inicializa o form
     */
    public LoginForm() {
        initComponents();
    }

    /**
     * Cria um novo objeto da classe ModelTable
     * lança uma exceção para quem chamar ele
     *
     * @throws SQLException
     */
    public void newConn() throws SQLException {
        this.login = new ModelTable(url, loginSql, PwSQL);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbCancel;
    private javax.swing.JButton jbHelp;
    private javax.swing.JButton jbValidate;
    private javax.swing.JLabel jlAcademicLibraryControlSystem;
    private javax.swing.JLabel jlDefaultUser;
    private javax.swing.JLabel jlInfo;
    private javax.swing.JLabel jlLogin;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JPasswordField jpfPassword;
    private javax.swing.JTextField jtfLogin;
    private javax.swing.JTextField jtfLoginSQL;
    private javax.swing.JTextField jtfPasswordSQL;
    // End of variables declaration//GEN-END:variables
}
