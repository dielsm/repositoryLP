<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="pt">
<head>
<!-- Generated by javadoc (version 1.7.0_51) on Wed Sep 09 13:44:19 BRT 2015 -->
<meta http-equiv="Content-Type" content="text/html" charset="UTF-8">
<title>ModelTable</title>
<meta name="date" content="2015-09-09">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ModelTable";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ModelTable.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../Data/ModelTableUpgradeable.html" title="class in Data"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?Data/ModelTable.html" target="_top">Frames</a></li>
<li><a href="ModelTable.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#fields_inherited_from_class_javax.swing.table.AbstractTableModel">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">Data</div>
<h2 title="Class ModelTable" class="title">Class ModelTable</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>javax.swing.table.AbstractTableModel</li>
<li>
<ul class="inheritance">
<li>Data.ModelTable</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable, javax.swing.table.TableModel</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">ModelTable</span>
extends javax.swing.table.AbstractTableModel</pre>
<div class="block">Esta classe possui operações referentes ao banco de dados</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../serialized-form.html#Data.ModelTable">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_javax.swing.table.AbstractTableModel">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;javax.swing.table.AbstractTableModel</h3>
<code>listenerList</code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../Data/ModelTable.html#ModelTable(java.lang.String, java.lang.String, java.lang.String)">ModelTable</a></strong>(java.lang.String&nbsp;url,
          java.lang.String&nbsp;user,
          java.lang.String&nbsp;password)</code>
<div class="block">Recebe tres strings, uma url um usuario e uma senha, cria uma conexão
 com os parametros recebidos</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../Data/ModelTable.html#ModelTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">ModelTable</a></strong>(java.lang.String&nbsp;url,
          java.lang.String&nbsp;user,
          java.lang.String&nbsp;password,
          java.lang.String&nbsp;query)</code>
<div class="block">Recebe tres strings, uma url um usuario e uma senha, cria uma conexão
 com os parametros recebidos e neste mesmo construtor já é executado
 uma consulta</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#disconnectFromDatabase()">disconnectFromDatabase</a></strong>()</code>
<div class="block">Este método fecha os objetos</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#excluirCliente(java.lang.String, java.lang.String)">excluirCliente</a></strong>(java.lang.String&nbsp;cpf,
              java.lang.String&nbsp;RG)</code>
<div class="block">Exclui um cliente da tabela através de seu cpf e rg</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#excluirProduto(java.lang.String)">excluirProduto</a></strong>(java.lang.String&nbsp;cod)</code>
<div class="block">Exclui um produto através de seu código</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#excluirUser(java.lang.String, java.lang.String)">excluirUser</a></strong>(java.lang.String&nbsp;cpf,
           java.lang.String&nbsp;login)</code>
<div class="block">Exclui um usuário atraves do cpf e login</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#excluirVendedor(java.lang.String)">excluirVendedor</a></strong>(java.lang.String&nbsp;cod)</code>
<div class="block">Exclui um vendedor através de seu código</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Class</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getColumnClass(int)">getColumnClass</a></strong>(int&nbsp;column)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getColumnCount()">getColumnCount</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getColumnName(int)">getColumnName</a></strong>(int&nbsp;column)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getPassword(java.lang.String)">getPassword</a></strong>(java.lang.String&nbsp;login)</code>
<div class="block">Este metodo é utilizado para retornar a senha de um determinado usuáriom,
 usa-se o login do usuário para localizar a senha</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getRowCount()">getRowCount</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getRowsOfUsers()">getRowsOfUsers</a></strong>()</code>
<div class="block">Este metodo é utilizado para retornar o tamanho de linhas que a tabela de
 usuários contém</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#getValueAt(int, int)">getValueAt</a></strong>(int&nbsp;row,
          int&nbsp;column)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#inserirCliente(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">inserirCliente</a></strong>(java.lang.String&nbsp;cpf,
              java.lang.String&nbsp;rg,
              java.lang.String&nbsp;telefone,
              java.lang.String&nbsp;nome)</code>
<div class="block">Insere um novo cliente na tabela</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#inserirProduto(java.lang.String, java.lang.String, java.lang.String)">inserirProduto</a></strong>(java.lang.String&nbsp;cod,
              java.lang.String&nbsp;preco,
              java.lang.String&nbsp;nome)</code>
<div class="block">Insere um novo produto na tabela</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#inserirUser(java.lang.String, java.lang.String, java.lang.String)">inserirUser</a></strong>(java.lang.String&nbsp;cpf,
           java.lang.String&nbsp;login,
           java.lang.String&nbsp;pw)</code>
<div class="block">Insere um novo usuário no banco de dados</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#insertVendedor(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">insertVendedor</a></strong>(java.lang.String&nbsp;nome,
              java.lang.String&nbsp;telefone,
              java.lang.String&nbsp;salario,
              java.lang.String&nbsp;cod)</code>
<div class="block">Insere um novo vendedor na tabela</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#preparedStatesCliente()">preparedStatesCliente</a></strong>()</code>
<div class="block">PreparedStatement dos clientes</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#preparedStatesProdutos()">preparedStatesProdutos</a></strong>()</code>
<div class="block">PreparedStatement dos produtos</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#preparedStatesVendedor()">preparedStatesVendedor</a></strong>()</code>
<div class="block">PreparedStatement dos Vendedores</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#prepStatement(int, int)">prepStatement</a></strong>(int&nbsp;i,
             int&nbsp;j)</code>
<div class="block">Metodos para pesquisa</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#prStatement()">prStatement</a></strong>()</code>
<div class="block">PreparedStatements</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#searchCliCod(java.lang.String)">searchCliCod</a></strong>(java.lang.String&nbsp;cod)</code>
<div class="block">Busca um cliente pelo seu código</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#searchCliName(java.lang.String)">searchCliName</a></strong>(java.lang.String&nbsp;n)</code>
<div class="block">Busca um cliente pelo seu nome ou parte do seu nome</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#searchProCod(java.lang.String)">searchProCod</a></strong>(java.lang.String&nbsp;cod)</code>
<div class="block">Busca um produto pelo seu código</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#searchProName(java.lang.String)">searchProName</a></strong>(java.lang.String&nbsp;na)</code>
<div class="block">Busca um produto pelo seu nome ou parte de seu nome</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#searchVendedorCod(java.lang.String)">searchVendedorCod</a></strong>(java.lang.String&nbsp;cod)</code>
<div class="block">Busca um vendedor pelo seu código</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#searchVendedorName(java.lang.String)">searchVendedorName</a></strong>(java.lang.String&nbsp;name)</code>
<div class="block">Busca um vendedor pelo seu nome ou parte de seu nome</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#setQuery(java.lang.String)">setQuery</a></strong>(java.lang.String&nbsp;query)</code>
<div class="block">Faz uma consulta no banco de dados através de uma string que contém a
 linha de código</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#showNF(java.lang.String)">showNF</a></strong>(java.lang.String&nbsp;nf)</code>
<div class="block">Busca uma nota fiscal pelo seu codigo</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateClienteNome(java.lang.String, java.lang.String)">updateClienteNome</a></strong>(java.lang.String&nbsp;nome,
                 java.lang.String&nbsp;CPF)</code>
<div class="block">Atualiza o nome de um cliente</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateClienteRG(java.lang.String, java.lang.String)">updateClienteRG</a></strong>(java.lang.String&nbsp;rg,
               java.lang.String&nbsp;CPF)</code>
<div class="block">Atualiza o RG de um cliente</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateClienteTelefone(java.lang.String, java.lang.String)">updateClienteTelefone</a></strong>(java.lang.String&nbsp;telefone,
                     java.lang.String&nbsp;CPF)</code>
<div class="block">Atualiza o telefone de um cliente</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateCPFCliente(java.lang.String, java.lang.String, java.lang.String)">updateCPFCliente</a></strong>(java.lang.String&nbsp;rg,
                java.lang.String&nbsp;cpf,
                java.lang.String&nbsp;newCPF)</code>
<div class="block">Atualiza o CPF de um cliente</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateProdutoNome(java.lang.String, java.lang.String)">updateProdutoNome</a></strong>(java.lang.String&nbsp;cod,
                 java.lang.String&nbsp;nome)</code>
<div class="block">Atualiza o nome de um produto</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateProdutoPrice(java.lang.String, java.lang.String)">updateProdutoPrice</a></strong>(java.lang.String&nbsp;cod,
                  java.lang.String&nbsp;price)</code>
<div class="block">Atualiza o preço de um produto</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateVendedorNome(java.lang.String, java.lang.String)">updateVendedorNome</a></strong>(java.lang.String&nbsp;cod,
                  java.lang.String&nbsp;nome)</code>
<div class="block">Atualiza o nome de um vendedor</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateVendedorSalario(java.lang.String, java.lang.String)">updateVendedorSalario</a></strong>(java.lang.String&nbsp;cod,
                     java.lang.String&nbsp;salario)</code>
<div class="block">Atualiza o salário de um determinado vendedor</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../Data/ModelTable.html#updateVendedorTelefone(java.lang.String, java.lang.String)">updateVendedorTelefone</a></strong>(java.lang.String&nbsp;cod,
                      java.lang.String&nbsp;telefone)</code>
<div class="block">Atualiza o telefone de um vendedor</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_javax.swing.table.AbstractTableModel">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;javax.swing.table.AbstractTableModel</h3>
<code>addTableModelListener, findColumn, fireTableCellUpdated, fireTableChanged, fireTableDataChanged, fireTableRowsDeleted, fireTableRowsInserted, fireTableRowsUpdated, fireTableStructureChanged, getListeners, getTableModelListeners, isCellEditable, removeTableModelListener, setValueAt</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ModelTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ModelTable</h4>
<pre>public&nbsp;ModelTable(java.lang.String&nbsp;url,
          java.lang.String&nbsp;user,
          java.lang.String&nbsp;password,
          java.lang.String&nbsp;query)
           throws java.sql.SQLException</pre>
<div class="block">Recebe tres strings, uma url um usuario e uma senha, cria uma conexão
 com os parametros recebidos e neste mesmo construtor já é executado
 uma consulta</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>url</code> - </dd><dd><code>user</code> - </dd><dd><code>password</code> - </dd><dd><code>query</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="ModelTable(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ModelTable</h4>
<pre>public&nbsp;ModelTable(java.lang.String&nbsp;url,
          java.lang.String&nbsp;user,
          java.lang.String&nbsp;password)
           throws java.sql.SQLException</pre>
<div class="block">Recebe tres strings, uma url um usuario e uma senha, cria uma conexão
 com os parametros recebidos</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>url</code> - </dd><dd><code>user</code> - </dd><dd><code>password</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getColumnClass(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getColumnClass</h4>
<pre>public&nbsp;java.lang.Class&nbsp;getColumnClass(int&nbsp;column)
                               throws java.lang.IllegalStateException</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>getColumnClass</code>&nbsp;in interface&nbsp;<code>javax.swing.table.TableModel</code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code>getColumnClass</code>&nbsp;in class&nbsp;<code>javax.swing.table.AbstractTableModel</code></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code></dd></dl>
</li>
</ul>
<a name="getColumnCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getColumnCount</h4>
<pre>public&nbsp;int&nbsp;getColumnCount()
                   throws java.lang.IllegalStateException</pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code></dd></dl>
</li>
</ul>
<a name="getColumnName(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getColumnName</h4>
<pre>public&nbsp;java.lang.String&nbsp;getColumnName(int&nbsp;column)
                               throws java.lang.IllegalStateException</pre>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>getColumnName</code>&nbsp;in interface&nbsp;<code>javax.swing.table.TableModel</code></dd>
<dt><strong>Overrides:</strong></dt>
<dd><code>getColumnName</code>&nbsp;in class&nbsp;<code>javax.swing.table.AbstractTableModel</code></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code></dd></dl>
</li>
</ul>
<a name="getRowCount()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRowCount</h4>
<pre>public&nbsp;int&nbsp;getRowCount()
                throws java.lang.IllegalStateException</pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code></dd></dl>
</li>
</ul>
<a name="getValueAt(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getValueAt</h4>
<pre>public&nbsp;java.lang.Object&nbsp;getValueAt(int&nbsp;row,
                          int&nbsp;column)
                            throws java.lang.IllegalStateException</pre>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code></dd></dl>
</li>
</ul>
<a name="disconnectFromDatabase()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>disconnectFromDatabase</h4>
<pre>public&nbsp;void&nbsp;disconnectFromDatabase()</pre>
<div class="block">Este método fecha os objetos</div>
</li>
</ul>
<a name="setQuery(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setQuery</h4>
<pre>public&nbsp;void&nbsp;setQuery(java.lang.String&nbsp;query)
              throws java.lang.IllegalStateException,
                     java.sql.SQLException</pre>
<div class="block">Faz uma consulta no banco de dados através de uma string que contém a
 linha de código</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>query</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code></dd>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="prStatement()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>prStatement</h4>
<pre>public&nbsp;void&nbsp;prStatement()
                 throws java.sql.SQLException</pre>
<div class="block">PreparedStatements</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="preparedStatesCliente()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>preparedStatesCliente</h4>
<pre>public&nbsp;void&nbsp;preparedStatesCliente()
                           throws java.sql.SQLException</pre>
<div class="block">PreparedStatement dos clientes</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="preparedStatesProdutos()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>preparedStatesProdutos</h4>
<pre>public&nbsp;void&nbsp;preparedStatesProdutos()
                            throws java.sql.SQLException</pre>
<div class="block">PreparedStatement dos produtos</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="preparedStatesVendedor()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>preparedStatesVendedor</h4>
<pre>public&nbsp;void&nbsp;preparedStatesVendedor()
                            throws java.sql.SQLException</pre>
<div class="block">PreparedStatement dos Vendedores</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="prepStatement(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>prepStatement</h4>
<pre>public&nbsp;void&nbsp;prepStatement(int&nbsp;i,
                 int&nbsp;j)
                   throws java.sql.SQLException</pre>
<div class="block">Metodos para pesquisa</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>i</code> - </dd><dd><code>j</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="searchCliName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>searchCliName</h4>
<pre>public&nbsp;void&nbsp;searchCliName(java.lang.String&nbsp;n)
                   throws java.sql.SQLException</pre>
<div class="block">Busca um cliente pelo seu nome ou parte do seu nome</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>n</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="searchCliCod(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>searchCliCod</h4>
<pre>public&nbsp;void&nbsp;searchCliCod(java.lang.String&nbsp;cod)
                  throws java.sql.SQLException</pre>
<div class="block">Busca um cliente pelo seu código</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="showNF(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>showNF</h4>
<pre>public&nbsp;void&nbsp;showNF(java.lang.String&nbsp;nf)</pre>
<div class="block">Busca uma nota fiscal pelo seu codigo</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nf</code> - </dd></dl>
</li>
</ul>
<a name="searchProName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>searchProName</h4>
<pre>public&nbsp;void&nbsp;searchProName(java.lang.String&nbsp;na)
                   throws java.sql.SQLException</pre>
<div class="block">Busca um produto pelo seu nome ou parte de seu nome</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>na</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="searchProCod(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>searchProCod</h4>
<pre>public&nbsp;void&nbsp;searchProCod(java.lang.String&nbsp;cod)
                  throws java.sql.SQLException</pre>
<div class="block">Busca um produto pelo seu código</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="getRowsOfUsers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRowsOfUsers</h4>
<pre>public&nbsp;int&nbsp;getRowsOfUsers()</pre>
<div class="block">Este metodo é utilizado para retornar o tamanho de linhas que a tabela de
 usuários contém</div>
<dl><dt><span class="strong">Returns:</span></dt><dd></dd></dl>
</li>
</ul>
<a name="getPassword(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPassword</h4>
<pre>public&nbsp;java.lang.String&nbsp;getPassword(java.lang.String&nbsp;login)
                             throws java.sql.SQLException</pre>
<div class="block">Este metodo é utilizado para retornar a senha de um determinado usuáriom,
 usa-se o login do usuário para localizar a senha</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>login</code> - </dd>
<dt><span class="strong">Returns:</span></dt><dd></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="searchVendedorName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>searchVendedorName</h4>
<pre>public&nbsp;void&nbsp;searchVendedorName(java.lang.String&nbsp;name)
                        throws java.sql.SQLException</pre>
<div class="block">Busca um vendedor pelo seu nome ou parte de seu nome</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>name</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="searchVendedorCod(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>searchVendedorCod</h4>
<pre>public&nbsp;void&nbsp;searchVendedorCod(java.lang.String&nbsp;cod)
                       throws java.sql.SQLException</pre>
<div class="block">Busca um vendedor pelo seu código</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.sql.SQLException</code></dd></dl>
</li>
</ul>
<a name="updateClienteRG(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateClienteRG</h4>
<pre>public&nbsp;void&nbsp;updateClienteRG(java.lang.String&nbsp;rg,
                   java.lang.String&nbsp;CPF)</pre>
<div class="block">Atualiza o RG de um cliente</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>rg</code> - </dd><dd><code>CPF</code> - </dd></dl>
</li>
</ul>
<a name="updateClienteNome(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateClienteNome</h4>
<pre>public&nbsp;void&nbsp;updateClienteNome(java.lang.String&nbsp;nome,
                     java.lang.String&nbsp;CPF)</pre>
<div class="block">Atualiza o nome de um cliente</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nome</code> - </dd><dd><code>CPF</code> - </dd></dl>
</li>
</ul>
<a name="inserirUser(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>inserirUser</h4>
<pre>public&nbsp;void&nbsp;inserirUser(java.lang.String&nbsp;cpf,
               java.lang.String&nbsp;login,
               java.lang.String&nbsp;pw)</pre>
<div class="block">Insere um novo usuário no banco de dados</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cpf</code> - </dd><dd><code>login</code> - </dd><dd><code>pw</code> - </dd></dl>
</li>
</ul>
<a name="excluirUser(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>excluirUser</h4>
<pre>public&nbsp;void&nbsp;excluirUser(java.lang.String&nbsp;cpf,
               java.lang.String&nbsp;login)</pre>
<div class="block">Exclui um usuário atraves do cpf e login</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cpf</code> - </dd><dd><code>login</code> - </dd></dl>
</li>
</ul>
<a name="excluirProduto(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>excluirProduto</h4>
<pre>public&nbsp;void&nbsp;excluirProduto(java.lang.String&nbsp;cod)</pre>
<div class="block">Exclui um produto através de seu código</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd></dl>
</li>
</ul>
<a name="excluirVendedor(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>excluirVendedor</h4>
<pre>public&nbsp;void&nbsp;excluirVendedor(java.lang.String&nbsp;cod)</pre>
<div class="block">Exclui um vendedor através de seu código</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd></dl>
</li>
</ul>
<a name="insertVendedor(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>insertVendedor</h4>
<pre>public&nbsp;void&nbsp;insertVendedor(java.lang.String&nbsp;nome,
                  java.lang.String&nbsp;telefone,
                  java.lang.String&nbsp;salario,
                  java.lang.String&nbsp;cod)</pre>
<div class="block">Insere um novo vendedor na tabela</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nome</code> - </dd><dd><code>telefone</code> - </dd><dd><code>salario</code> - </dd><dd><code>cod</code> - </dd></dl>
</li>
</ul>
<a name="updateVendedorSalario(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateVendedorSalario</h4>
<pre>public&nbsp;void&nbsp;updateVendedorSalario(java.lang.String&nbsp;cod,
                         java.lang.String&nbsp;salario)</pre>
<div class="block">Atualiza o salário de um determinado vendedor</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd><dd><code>salario</code> - </dd></dl>
</li>
</ul>
<a name="updateVendedorTelefone(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateVendedorTelefone</h4>
<pre>public&nbsp;void&nbsp;updateVendedorTelefone(java.lang.String&nbsp;cod,
                          java.lang.String&nbsp;telefone)</pre>
<div class="block">Atualiza o telefone de um vendedor</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd><dd><code>telefone</code> - </dd></dl>
</li>
</ul>
<a name="updateVendedorNome(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateVendedorNome</h4>
<pre>public&nbsp;void&nbsp;updateVendedorNome(java.lang.String&nbsp;cod,
                      java.lang.String&nbsp;nome)</pre>
<div class="block">Atualiza o nome de um vendedor</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd><dd><code>nome</code> - </dd></dl>
</li>
</ul>
<a name="inserirProduto(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>inserirProduto</h4>
<pre>public&nbsp;void&nbsp;inserirProduto(java.lang.String&nbsp;cod,
                  java.lang.String&nbsp;preco,
                  java.lang.String&nbsp;nome)</pre>
<div class="block">Insere um novo produto na tabela</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd><dd><code>preco</code> - </dd><dd><code>nome</code> - </dd></dl>
</li>
</ul>
<a name="updateProdutoPrice(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateProdutoPrice</h4>
<pre>public&nbsp;void&nbsp;updateProdutoPrice(java.lang.String&nbsp;cod,
                      java.lang.String&nbsp;price)</pre>
<div class="block">Atualiza o preço de um produto</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd><dd><code>price</code> - </dd></dl>
</li>
</ul>
<a name="updateCPFCliente(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateCPFCliente</h4>
<pre>public&nbsp;void&nbsp;updateCPFCliente(java.lang.String&nbsp;rg,
                    java.lang.String&nbsp;cpf,
                    java.lang.String&nbsp;newCPF)</pre>
<div class="block">Atualiza o CPF de um cliente</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>rg</code> - </dd><dd><code>cpf</code> - </dd><dd><code>newCPF</code> - </dd></dl>
</li>
</ul>
<a name="updateProdutoNome(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateProdutoNome</h4>
<pre>public&nbsp;void&nbsp;updateProdutoNome(java.lang.String&nbsp;cod,
                     java.lang.String&nbsp;nome)</pre>
<div class="block">Atualiza o nome de um produto</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cod</code> - </dd><dd><code>nome</code> - </dd></dl>
</li>
</ul>
<a name="updateClienteTelefone(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateClienteTelefone</h4>
<pre>public&nbsp;void&nbsp;updateClienteTelefone(java.lang.String&nbsp;telefone,
                         java.lang.String&nbsp;CPF)</pre>
<div class="block">Atualiza o telefone de um cliente</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>telefone</code> - </dd><dd><code>CPF</code> - </dd></dl>
</li>
</ul>
<a name="excluirCliente(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>excluirCliente</h4>
<pre>public&nbsp;void&nbsp;excluirCliente(java.lang.String&nbsp;cpf,
                  java.lang.String&nbsp;RG)</pre>
<div class="block">Exclui um cliente da tabela através de seu cpf e rg</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cpf</code> - </dd><dd><code>RG</code> - </dd></dl>
</li>
</ul>
<a name="inserirCliente(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>inserirCliente</h4>
<pre>public&nbsp;void&nbsp;inserirCliente(java.lang.String&nbsp;cpf,
                  java.lang.String&nbsp;rg,
                  java.lang.String&nbsp;telefone,
                  java.lang.String&nbsp;nome)</pre>
<div class="block">Insere um novo cliente na tabela</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cpf</code> - </dd><dd><code>rg</code> - </dd><dd><code>telefone</code> - </dd><dd><code>nome</code> - </dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ModelTable.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../Data/ModelTableUpgradeable.html" title="class in Data"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?Data/ModelTable.html" target="_top">Frames</a></li>
<li><a href="ModelTable.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#fields_inherited_from_class_javax.swing.table.AbstractTableModel">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
