package com.acme.gui;

import br.com.acme.model.User;
import br.com.acme.model.AcademicLibrary;
import com.acme.logic.ALManager;
import com.acme.logic.LogErros;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author Mateus
 */
public class CreateAccountForm extends javax.swing.JDialog {

    /**
     * Declaração de atributos e criação de um usuário.
     */
    private AcademicLibrary library;
    private User usr = new User();

    /**
     * Criará o form Este contrutor recebe um usuario como parametro e também
     * faz a inicialização do form, carrega o library apartir do metodo
     * getInstance contido em ALManager.
     *
     * @param parent
     * @param modal
     * @param usr
     */
    public CreateAccountForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        library = ALManager.getInstance();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCreateUserAccount = new javax.swing.JLabel();
        jlName = new javax.swing.JLabel();
        jlEmail = new javax.swing.JLabel();
        jlPhone = new javax.swing.JLabel();
        jlLogin = new javax.swing.JLabel();
        jlPassword = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jtfPhone = new javax.swing.JTextField();
        jtfLogin = new javax.swing.JTextField();
        jtfPassword = new javax.swing.JTextField();
        jbCreate = new javax.swing.JButton();
        jbClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("User");

        jlCreateUserAccount.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jlCreateUserAccount.setText("Create User Account");

        jlName.setText("Name:");

        jlEmail.setText("Email:");

        jlPhone.setText("Phone:");

        jlLogin.setText("Login:");

        jlPassword.setText("Password:");

        jbCreate.setText("Create");
        jbCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbCreateMouseClicked(evt);
            }
        });
        jbCreate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCreateKeyPressed(evt);
            }
        });

        jbClose.setText("Close");
        jbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbCloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlPassword)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jlName)
                                .addComponent(jlEmail)
                                .addComponent(jlPhone)
                                .addComponent(jlLogin)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbCreate)
                                .addGap(32, 32, 32)
                                .addComponent(jbClose))
                            .addComponent(jlCreateUserAccount))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlCreateUserAccount)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlEmail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPhone))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlLogin))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPassword)
                    .addComponent(jtfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbClose)
                    .addComponent(jbCreate))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Se pressionado o botão entao a janela é fechada.
     *
     * @param evt Captura evento do botão Close.
     */
    private void jbCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jbCloseMouseClicked

    /**
     * Quando ocorrer este evento então o será criado um novo usuario somente se
     * os campos não estiverem vazios. Logo após este usuário é inserido no map
     * de Users.
     *
     * @param evt Captura de ação sobre o botão Create
     */
    private void jbCreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbCreateMouseClicked
        try {
            String n = jtfName.getText();

            if (n.length() != 0) {
                usr.setName(n);

            } else {
                JOptionPane.showMessageDialog(this, "O campo 'Name' não pode ser vazio!", "Aviso", JOptionPane.OK_OPTION);
                jtfName.requestFocus();
            }

            String e = jtfEmail.getText();
            if (e.length() != 0) {
                usr.setEmail(e);
            } else {
                JOptionPane.showMessageDialog(this, "O campo 'Email' não pode ser vazio!", "Aviso", JOptionPane.OK_OPTION);
                jtfEmail.requestFocus();
            }

            String phone = jtfPhone.getText();
            if (phone.length() != 0) {
                usr.setPhone(phone);
            } else {
                JOptionPane.showMessageDialog(this, "O campo 'Phone' não pode ser vazio!", "Aviso", JOptionPane.OK_OPTION);
                jtfPhone.requestFocus();
            }

            String l = jtfLogin.getText();
            if (l.length() != 0) {
                usr.setLogin(l);
            } else {
                JOptionPane.showMessageDialog(this, "O campo 'Login' não pode ser vazio!", "Aviso", JOptionPane.OK_OPTION);
                jtfLogin.requestFocus();
            }

            String s = jtfPassword.getText();
            if (s.length() != 0) {
                String en = Encrypt.cripto(s);
                System.out.println(en);
                //int pas = Integer.parseInt(s);
                usr.setPassword(en);
            } else {
                JOptionPane.showMessageDialog(this, "O campo 'Password' não pode ser vazio!", "Aviso", JOptionPane.OK_OPTION);
                jtfPassword.requestFocus();
            }

            if (l.length() != 0 && s.length() != 0 && phone.length() != 0 && e.length() != 0 && n.length() != 0) {
                library.getUsers().put(usr.getLogin(), usr);
                limpa();
                JOptionPane.showMessageDialog(null, "Account Created Successfully");
                Thread.sleep(300);
                this.dispose();
            }

        } catch (Exception e) {
            LogErros.gravarArquivo(e);
        }
    }//GEN-LAST:event_jbCreateMouseClicked

    private void limpa() {
        jtfName.setText("");
        jtfEmail.setText("");
        jtfPhone.setText("");
        jtfLogin.setText("");
        jtfPassword.setText("");
    }

    private void jbCreateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCreateKeyPressed
        int tecla = evt.getKeyCode();
        if (tecla == KeyEvent.VK_ENTER || tecla == KeyEvent.VK_SPACE) {
            jbCreateMouseClicked(null);
        }
    }//GEN-LAST:event_jbCreateKeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbClose;
    private javax.swing.JButton jbCreate;
    private javax.swing.JLabel jlCreateUserAccount;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlLogin;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlPassword;
    private javax.swing.JLabel jlPhone;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfLogin;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfPassword;
    private javax.swing.JTextField jtfPhone;
    // End of variables declaration//GEN-END:variables
}
